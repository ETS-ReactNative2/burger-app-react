{"version":3,"sources":["components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order/Order.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","logo","props","className","src","burgerLogo","alt","navigationItem","styles","to","link","exact","activeClassName","active","children","navigationItems","container","NavigationItem","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","NavigationItems","Backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","modalClosed","style","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","textAlign","fontSize","OrderSummary","checkoutSummary","burgerSummary","checkoutCancelled","checkoutContinued","input","inputElement","elementType","elementConfig","value","options","option","displayValue","ContactData","orderForm","name","placeholder","street","zipCode","country","email","deliveryMethod","orderHandler","e","preventDefault","order","post","alert","console","log","formElementsArray","id","config","form","formElement","Input","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","CheckoutSummary","path","match","url","render","ingredientName","amount","ingredientsOutput","Number","parseFloat","orders","fetchedOrders","Order","App","component","Orders","BurgerBuilder","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cb6d5b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3Lxtf\",\"label\":\"Input_label__xArdv\",\"inputElement\":\"Input_inputElement__1D0SI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItem\":\"NavigationItem_navigationItem__3QLCu\",\"active\":\"NavigationItem_active__12soB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CheckoutSummary_container__2IMPW\",\"burgerSummary\":\"CheckoutSummary_burgerSummary__22sP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order_container__2fvzo\",\"ingredient\":\"Order_ingredient__N2--7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavigationItems_container__3vmgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactData_container__1zdqS\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\">\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={styles.navigationItem}>\r\n        <NavLink to={props.link} exact={props.exact} activeClassName={styles.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nimport styles from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={styles.container}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = (props) => (\r\n    \r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className=\"Logo-Toolbar\">\r\n            <Logo />\r\n        </div>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n);\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [\"SideDrawer\", \"Open\"];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className=\"Logo-SideDrawer\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport './Layout.css';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( (prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showSideDrawer } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n\r\n                <SideDrawer \r\n                    open={showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n\r\n                <main className=\"content\">\r\n                    {this.props.children}\r\n                </main>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-app-react-40887.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className=\"bread-bottom\"></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"bread-top\">\r\n                        <div className=\"ceeds\"></div>\r\n                        <div className=\"ceeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className=\"meat\"></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className=\"cheese\"></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className=\"bacon\"></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className=\"salad\"></div>;\r\n                break;\r\n            default: \r\n                ingredient = null;\r\n        }\r\n\r\n        return  ingredient;\r\n    }\r\n};\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).\r\n        map((ingKey) => {\r\n            return [...Array(props.ingredients[ingKey])].map((_, i) => {\r\n                return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please, start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"burger\">\r\n            <BurgerIngredient type='bread-top'/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"buildControl\">\r\n        <div className=\"label\">{props.label}</div>\r\n        <button \r\n            className=\"less\"\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n                Less\r\n        </button>\r\n        <button \r\n            className=\"more\"\r\n            onClick={props.added}>\r\n                More\r\n        </button>\r\n    </div>\r\n);\r\n\r\n\r\nexport default buildControl;\r\n\r\n","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nimport './BuildControls.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Bacon', type: 'bacon' }\r\n];\r\n\r\n\r\nconst buildControls = ( props ) => (\r\n\r\n    <div className=\"buildControls\">\r\n        <p>Current price: <strong>{props.price.toFixed(2)} $</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} \r\n                price={props.price}/>\r\n        ))}\r\n        <button className=\"orderButton\"\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>\r\n            ORDER NOW\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className=\"Modal\"\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0',\r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n   ","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button \r\n        className={[\"Button\", props.btnType].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\n\r\nexport default button;","import React, { Fragment } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(ingKey => {\r\n            return <li key={ingKey}>\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                            {ingKey}: {props.ingredients[ingKey]}\r\n                        </span>\r\n                    </li>\r\n        });\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"loader\"></div>\r\n)\r\n\r\nexport default spinner;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null,\r\n        }\r\n\r\n        componentWillMount() {\r\n            // Handle request errors with axios \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n\r\n            // Handle response errors with axios\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        //Hide Modal on click and set error to null\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Fragment>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {/* Display error message only if there is an error */}\r\n                        {this.state.error ? this.state.error.message : null}\r\n\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport axios from '../../axios-orders';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false,\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('https://burger-app-react-40887.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ ingredients: response.data })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n    };\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients).\r\n            map((ingKey) => {\r\n                return ingredients[ingKey];\r\n            }).\r\n            reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({ purchasable: sum > 0 });\r\n    }\r\n\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients,\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients,\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //Pass selected ingredients as props throught query params\r\n        const queryParams = [];\r\n\r\n        for (let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { ingredients,\r\n            totalPrice,\r\n            purchasable,\r\n            purchasing,\r\n            loading,\r\n            error } = this.state;\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        // {salad: true, meat: false etc...}\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = error ? <p style={{ textAlign: 'center', fontSize: '2.5rem' }}>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (ingredients) {\r\n            burger = (\r\n                <Fragment>\r\n                    <Burger ingredients={ingredients} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        purchasable={purchasable}\r\n                        ordered={this.purchaseHandler}\r\n                        disabled={disabledInfo}\r\n                        price={totalPrice} />\r\n                </Fragment>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={ingredients}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={totalPrice} />\r\n        };\r\n\r\n        if (loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n\r\n            <Fragment>\r\n                <Modal show={purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Fragment>\r\n\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport styles from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            <h1>We hope it tastes well!</h1>\r\n            <div className={styles.burgerSummary}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={styles.inputElement}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={styles.inputElement}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select className={styles.inputElement} value={props.value}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={styles.inputElement}\r\n                {...props.elementConfig}\r\n                value={props.value} />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.input}>\r\n            <label className={styles.label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nimport styles from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                },\r\n                value: ''\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street',\r\n                },\r\n                value: ''\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code',\r\n                },\r\n                value: ''\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country',\r\n                },\r\n                value: ''\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Mail',\r\n                },\r\n                value: ''\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n                    ]\r\n                },\r\n                value: ''\r\n            },\r\n        },\r\n        loading: false,\r\n    }\r\n\r\n    orderHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ loading: true });\r\n\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n        };\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(res => {\r\n                this.setState({ loading: false });\r\n                alert(\"Thanks! Your order was sent to our cafe!\");\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false })\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { orderForm, loading } = this.state;\r\n\r\n        const formElementsArray = [];\r\n        for (let key in orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: orderForm[key]\r\n            })\r\n        };\r\n\r\n        console.log(formElementsArray);\r\n\r\n        let form = (\r\n            <form>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value} />\r\n                ))}\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if (loading) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={styles.container}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ContactData;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 0,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n\r\n        const ingredients = {};\r\n        let price = 0;\r\n\r\n        for (let param of query.entries()) {\r\n            // each value: ['salad', 1]\r\n            if (param[0] === 'price') {\r\n                price = param[1];\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n\r\n        this.setState({ ingredients: ingredients, totalPrice: price });\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n\r\n        const { ingredients, totalPrice } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingredients={ingredients}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n\r\n                <Route path={this.props.match.url + '/contact-data'}\r\n                    render={(props) => (\r\n                        <ContactData\r\n                            ingredients={ingredients}\r\n                            price={totalPrice}\r\n                            {...props} />)\r\n                    } />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Checkout;","import React from 'react';\r\n\r\nimport styles from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName],\r\n            }\r\n        );\r\n    };\r\n\r\n    const ingredientsOutput = ingredients.map(ingredient => {\r\n        return (\r\n            <span key={ingredient.name} className={styles.ingredient}>\r\n                {ingredient.name} ({ingredient.amount})\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order/Order';\r\n\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    orders: fetchedOrders,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { orders, loading } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/orders\" component={Orders} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst app = (\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}