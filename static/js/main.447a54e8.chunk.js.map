{"version":3,"sources":["store/actions/actionTypes.js","shared/utils.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Burger/Burger.module.css","hoc/asyncComponent/asyncComponent.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","registerServiceWorker.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","isEmail","test","minLength","length","maxLength","addIngredient","ingredientName","type","actionTypes","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","purchaseBurgerStart","post","purchaseBurgerSuccess","name","purchaseBurgerFail","id","orderId","purchaseBurgerInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","authUrl","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authFail","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","Backdrop","props","show","className","onClick","clicked","Modal","nextProps","this","children","modalClosed","style","transform","opacity","Component","button","btnType","join","disabled","spinner","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","res","eject","message","BurgerIngredient","ingredient","styles","breadBottom","breadTop","ceeds","ceeds2","meat","cheese","bacon","salad","burger","transformedIngredients","Object","keys","map","ingKey","Array","_","i","reduce","arr","el","concat","asyncComponent","importComponent","component","default","logo","src","burgerLogo","alt","navigationItem","to","link","exact","activeClassName","active","navigationItems","isAuthenticated","container","NavigationItem","drawerToggle","toolbar","drawerToggleClicked","NavigationItems","sideDrawer","attachedClasses","open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","content","connect","buildControl","label","less","removed","more","added","controls","buildControls","price","toFixed","ctrl","BuildControl","ingredientAdded","ingredientRemoved","orderButton","purchasable","ordered","orderSummary","ingredientSummary","textTransform","Button","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","textAlign","fontSize","Spinner","Burger","BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","totalPrice","OrderSummary","burgerBuilder","ingName","actions","onLogout","useEffect","asyncCheckout","asyncOrders","asyncAuth","withRouter","onAuthSignup","routes","Logout","initialState","building","INGREDIENT_PRICES","action","updatedIngredientOnAdd","updatedStateOnAdd","updatedIngredientOnRemove","updatedStateOnRemove","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","newOrder","fetchOrdersStart","fetchOrdersSuccess","authRedirectPath","authStart","authLogout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","next","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.447a54e8.chunk.js","sourcesContent":["// burgerBuilder actions\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n// burger purchase actions\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_BURGER_INIT';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\n\n// order actions\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\n// Auth actions\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    // Check for empty input\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    // Check for valid email\n    if (rules.isEmail) {\n        const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    // Check for min length of the inputed value\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n    }\n\n    // Check for max length of the inputed value\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (ingredientName) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingredientName,\n    }\n};\n\nexport const removeIngredient = (ingredientName) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingredientName,\n    }\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients,\n    }\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed(error));\n            })\n    }\n};\n\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    }\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START,\n    }\n};\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderData,\n        orderId: id,\n    }\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error,\n    }\n};\n\nexport const purchaseBurgerInit = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_INIT,\n    }\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders,\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error,\n    };\n};\n\nexport const fetchedOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchedOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n            .then(response => {\n                const fetchedOrders = [];\n                for (let key in response.data) {\n                    fetchedOrders.push({\n                        ...response.data[key],\n                        id: key,\n                    })\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(error => {\n                dispatch(fetchOrdersFail(error));\n            });\n    };\n}\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token, \n        userId,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error,\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true,\n        };\n        let authUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCB3cyFnp1gbWUhlls3_4c-zj-LSwU3av8';\n        if(!isSignup) {\n            authUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCB3cyFnp1gbWUhlls3_4c-zj-LSwU3av8';\n        }\n         axios.post(authUrl, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(error => {\n                dispatch(authFail(error.response.data.error));\n            })\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path,\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        const userId = localStorage.getItem('userId');\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\n        if(!token) {\n            dispatch(logout());\n        } else {\n            if(expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"BurgerIngredient_box__1xTpJ\",\"breadTop\":\"BurgerIngredient_breadTop__2UZng\",\"seeds\":\"BurgerIngredient_seeds__3PW_F\",\"seeds2\":\"BurgerIngredient_seeds2__o4hu4\",\"salad\":\"BurgerIngredient_salad__1uNT-\",\"bacon\":\"BurgerIngredient_bacon__322UN\",\"cheese\":\"BurgerIngredient_cheese__aPl2X\",\"meat\":\"BurgerIngredient_meat__2npFp\",\"breadBottom\":\"BurgerIngredient_breadBottom__1lzSO\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-app-react-40887.firebaseio.com/'\n});\n\nexport default instance;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControl\":\"BuildControl_buildControl__11Ba1\",\"label\":\"BuildControl_label__1Uevy\",\"less\":\"BuildControl_less__2hxbJ\",\"more\":\"BuildControl_more__37Pf-\"};","import React from 'react';\n\nimport './Backdrop.css'\n\nconst Backdrop = (props) => (\n\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n\n);\n\nexport default Backdrop;","import React, { Fragment, Component } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport \"./Modal.css\";\n\nexport default class Modal extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return(\n            <Fragment>\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n            <div className=\"Modal\"\n                style={{\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: this.props.show ? '1' : '0',\n                }}>\n                {this.props.children}\n            </div>\n        </Fragment>\n        );\n    }\n}\n   ","import React from 'react';\n\nimport './Button.css';\n\n\nconst button = (props) => (\n    <button\n        className={[\"Button\", props.btnType].join(' ')}\n        onClick={props.clicked}\n        disabled={props.disabled}>\n        {props.children}\n    </button>\n);\n\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItem\":\"NavigationItem_navigationItem__2nVax\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControls\":\"BuildControls_buildControls__11sGI\",\"orderButton\":\"BuildControls_orderButton__3zxAF\",\"enable\":\"BuildControls_enable__9xLsD\"};","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"loader\"></div>\n)\n\nexport default spinner;","import React, { Fragment, Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n\n    return class extends Component {\n\n        state = {\n            error: null,\n        }\n\n        componentWillMount() {\n            // Handle request errors with axios \n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            });\n\n            // Handle response errors with axios\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        //Hide Modal on click and set error to null\n        errorConfirmedHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Fragment>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {/* Display error message only if there is an error */}\n                        {this.state.error ? this.state.error.message : null}\n\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './BurgerIngredient.module.css';\n\n\nclass BurgerIngredient extends Component {\n\n    render() {\n\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={styles.breadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={styles.breadTop}>\n                        <div className={styles.ceeds}></div>\n                        <div className={styles.ceeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={styles.meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={styles.cheese}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={styles.bacon}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={styles.salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired,\n}\n\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport styles from './Burger.module.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients).\n        map((ingKey) => {\n            return [...Array(props.ingredients[ingKey])].map((_, i) => {\n                return <BurgerIngredient key={ingKey + i} type={ingKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please, start adding ingredients!</p>\n    }\n\n    return (\n        <div className={styles.burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n\n    );\n};\n\nexport default burger;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__1QeJi\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavigationItems_container__3A5-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__y4b7K\"};","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n\n        state = {\n            component: null,\n        }\n\n        componentDidMount() {\n            importComponent()\n                .then(component => {\n                    this.setState({ component: component.default })\n                });\n        }\n\n        render() {\n            const Component = this.state.component;\n\n            return Component ? <Component {...this.props} /> : null;\n        }\n    }\n};\n\nexport default asyncComponent;\n\n\n\n","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"Logo\">\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <li className={styles.navigationItem}>\n        <NavLink to={props.link} exact={props.exact} activeClassName={styles.active}>\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nimport styles from './NavigationItems.module.css';\n\nconst navigationItems = ({ isAuthenticated }) => (\n    <ul className={styles.container}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {isAuthenticated && <NavigationItem link=\"/orders\">Orders</NavigationItem>}\n        {isAuthenticated\n            ? <NavigationItem link=\"/logout\">Logout</NavigationItem>\n            : <NavigationItem link=\"/auth\">Authenticate</NavigationItem> }\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div \n        onClick={props.clicked} className=\"DrawerToggle\">\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n\nimport './Toolbar.css';\n\nconst toolbar = (props) => (\n    <header className=\"Toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className=\"Logo-Toolbar\">\n            <Logo />\n        </div>\n        <nav className=\"DesktopOnly\">\n            <NavigationItems isAuthenticated={props.isAuthenticated} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React, { Fragment } from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nimport './SideDrawer.css';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [\"SideDrawer\", \"Close\"];\n\n    if (props.open) {\n        attachedClasses = [\"SideDrawer\", \"Open\"];\n    }\n\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className=\"Logo-SideDrawer\">\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuthenticated} />\n                </nav>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default sideDrawer;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport styles from './Layout.module.css';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({\n            showSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {\n                showSideDrawer: !prevState.showSideDrawer,\n            }\n        })\n    }\n\n    render() {\n        const { showSideDrawer } = this.state;\n        const { isAuthenticated } = this.props;\n\n        return (\n            <>\n                <Toolbar \n                    isAuthenticated={isAuthenticated} \n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuthenticated={isAuthenticated} \n                    open={showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={styles.content}>\n                    {this.props.children}\n                </main>\n            </>\n        )\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n         isAuthenticated: state.auth.token !== null,\n    }\n};\n\nexport default connect(mapStateToProps, null)(Layout);\n","import React from 'react';\n\nimport styles from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={styles.buildControl}>\n        <div className={styles.label}>{props.label}</div>\n        <button\n            className={styles.less}\n            onClick={props.removed}\n            disabled={props.disabled}>\n            Less\n        </button>\n        <button\n            className={styles.more}\n            onClick={props.added}>\n            More\n        </button>\n    </div>\n);\n\n\nexport default buildControl;\n\n","import React from 'react';\n\nimport BuildControl from './BuildControl/BuildControl';\n\nimport styles from './BuildControls.module.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Bacon', type: 'bacon' }\n];\n\n\nconst buildControls = (props) => (\n    <div className={styles.buildControls}>\n        <p>Current price: <strong>{props.price.toFixed(2)} $</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n                price={props.price} />\n        ))}\n        <button className={styles.orderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>\n            {props.isAuthenticated ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n            \n        </button>\n    </div>\n);\n\nexport default buildControls;","import React, { Fragment } from 'react';\n\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(ingKey => {\n            return <li key={ingKey}>\n                        <span style={{ textTransform: \"capitalize\" }}>\n                            {ingKey}: {props.ingredients[ingKey]}\n                        </span>\n                    </li>\n        });\n\n    return (\n\n        <Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Fragment>\n    )\n};\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nexport class BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    // Check if there are any or just one ingredient to then continue and make an order\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients).\n            map((ingKey) => {\n                return ingredients[ingKey];\n            }).\n            reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true });\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n\n    render() {\n\n        const { purchasing } = this.state;\n\n        const disabledInfo = {\n            ...this.props.ingredients\n        };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        // {salad: true, meat: false etc...}\n\n        let orderSummary = null;\n\n        let burger = this.props.error ? <p style={{ textAlign: 'center', fontSize: '2.5rem' }}>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if (this.props.ingredients) {\n            burger = (\n                <>\n                    <Burger ingredients={this.props.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        purchasable={this.updatePurchaseState(this.props.ingredients)}\n                        ordered={this.purchaseHandler}\n                        disabled={disabledInfo}\n                        isAuthenticated={this.props.isAuthenticated}\n                        price={this.props.totalPrice} />\n                </>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ingredients}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler}\n                price={this.props.totalPrice} />\n        };\n\n        return (\n            <>\n                <Modal show={purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseBurgerInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport * as actions from '../../../store/actions/index';\n\nconst Logout = (props) => {\n\n    useEffect(() => {\n        props.onLogout();\n    }, []);\n    \n    return <Redirect to=\"/\" />\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout()),\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nconst App = (props) => {\n  useEffect(() => {\n    props.onAuthSignup();\n  }, []);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={asyncAuth} />\n      <Route path=\"/\" exact component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if(props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Route path=\"/checkout\" component={asyncCheckout} />\n        <Route path=\"/orders\" component={asyncOrders} />\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/logout\" component={Logout} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  };\n\n  return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utils';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n};\n\nconst addIngredient = (state, action) => {\n    const updatedIngredientOnAdd = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\n    const updatedIngredientsOnAdd = updateObject(state.ingredients, updatedIngredientOnAdd);\n    const updatedStateOnAdd = {\n        ingredients: updatedIngredientsOnAdd,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n    };\n    return updateObject(state, updatedStateOnAdd);\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIngredientOnRemove = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\n    const updatedIngredientsOnRemove = updateObject(state.ingredients, updatedIngredientOnRemove);\n    const updatedStateOnRemove = {\n        ingredients: updatedIngredientsOnRemove,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n    };\n    return updateObject(state, updatedStateOnRemove);\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: action.ingredients,\n        totalPrice: 4,\n        error: false,\n        building: false,\n    });\n};\n\nconst fetchIngredientsFailed = (state) => {\n    return updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state);\n        default: return state;\n    };\n};\n\nexport default reducer;\n\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utils';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n};\n\nconst purchaseBurgerInit = (state) => {\n    return updateObject(state, { purchased: false });\n};\n\nconst purchaseBurgerStart = (state) => {\n    return updateObject(state, { loading: true });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\n    return updateObject(state, {\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true,\n    });\n};\n\nconst purchaseBurgerFail = (state) => {\n    return updateObject(state, { loading: false });\n};\n\nconst fetchOrdersStart = (state) => {\n    return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, { \n        orders: action.orders,\n        loading: false,\n    });\n};\n\nconst fetchOrdersFail = (state) => {\n    return updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_BURGER_INIT: return purchaseBurgerInit(state);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state);\n        default: return state;\n    };\n};\n\nexport default reducer;\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utils';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n};\n\nconst authStart = (state) => {\n    return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false,\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, { error: action.error, loading: false });\n};\n\nconst authLogout = (state) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: \n            return state;\n    };\n};\n\nexport default reducer;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, \n         applyMiddleware, \n         compose,\n         combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport './index.css';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        }\n    }\n};\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(logger, thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}