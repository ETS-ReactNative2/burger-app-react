{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order/Order.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Burger/Burger.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order/Order.js","containers/Orders/Orders.js","App.js","store/reducers/burgerBuilder.js","registerServiceWorker.js","index.js"],"names":["module","exports","logo","props","className","src","burgerLogo","alt","navigationItem","styles","to","link","exact","activeClassName","active","children","navigationItems","container","NavigationItem","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","NavigationItems","Backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","breadBottom","breadTop","ceeds","ceeds2","meat","cheese","bacon","salad","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","less","removed","disabled","more","added","controls","buildControls","price","toFixed","ctrl","BuildControl","ingredientAdded","ingredientRemoved","orderButton","purchasable","ordered","Modal","nextProps","modalClosed","style","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","onInitIngredients","sum","disabledInfo","textAlign","fontSize","Burger","BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","totalPrice","OrderSummary","connect","dispatch","ingName","ingredientName","get","then","data","catch","err","checkoutSummary","burgerSummary","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","alert","console","log","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Input","CheckoutSummary","goBack","replace","path","match","url","component","amount","ingredientsOutput","Number","parseFloat","orders","fetchedOrders","Order","App","basename","Checkout","Orders","initialState","INGREDIENT_PRICES","reducer","action","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","burgerBuilderReducer","applyMiddleware","next","result","getState","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dbbe57e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"BurgerIngredient_box__3wcw3\",\"breadTop\":\"BurgerIngredient_breadTop__ECPFz\",\"seeds\":\"BurgerIngredient_seeds__2Mj-F\",\"seeds2\":\"BurgerIngredient_seeds2__1tHkR\",\"salad\":\"BurgerIngredient_salad__gksDj\",\"bacon\":\"BurgerIngredient_bacon__2eScA\",\"cheese\":\"BurgerIngredient_cheese__3JAbR\",\"meat\":\"BurgerIngredient_meat__14ZdX\",\"breadBottom\":\"BurgerIngredient_breadBottom__2NkIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControl\":\"BuildControl_buildControl__2VCgp\",\"label\":\"BuildControl_label__4vFLD\",\"less\":\"BuildControl_less__1PoEc\",\"more\":\"BuildControl_more__16uXk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3Lxtf\",\"label\":\"Input_label__xArdv\",\"inputElement\":\"Input_inputElement__1D0SI\",\"invalid\":\"Input_invalid__230wj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItem\":\"NavigationItem_navigationItem__3QLCu\",\"active\":\"NavigationItem_active__12soB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControls\":\"BuildControls_buildControls__2Rk5m\",\"orderButton\":\"BuildControls_orderButton__2gNpc\",\"enable\":\"BuildControls_enable__23714\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CheckoutSummary_container__2IMPW\",\"burgerSummary\":\"CheckoutSummary_burgerSummary__22sP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order_container__2fvzo\",\"ingredient\":\"Order_ingredient__N2--7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__25air\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavigationItems_container__3vmgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__3egtY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactData_container__1zdqS\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\">\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={styles.navigationItem}>\r\n        <NavLink to={props.link} exact={props.exact} activeClassName={styles.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nimport styles from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={styles.container}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = (props) => (\r\n    \r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className=\"Logo-Toolbar\">\r\n            <Logo />\r\n        </div>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n);\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [\"SideDrawer\", \"Open\"];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className=\"Logo-SideDrawer\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showSideDrawer } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n\r\n                <SideDrawer\r\n                    open={showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n\r\n                <main className={styles.content}>\r\n                    {this.props.children}\r\n                </main>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-app-react-40887.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './BurgerIngredient.module.css';\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={styles.breadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={styles.breadTop}>\r\n                        <div className={styles.ceeds}></div>\r\n                        <div className={styles.ceeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={styles.meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={styles.cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={styles.bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={styles.salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n};\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport styles from './Burger.module.css';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).\r\n        map((ingKey) => {\r\n            return [...Array(props.ingredients[ingKey])].map((_, i) => {\r\n                return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please, start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.burger}>\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={styles.buildControl}>\r\n        <div className={styles.label}>{props.label}</div>\r\n        <button\r\n            className={styles.less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n            Less\r\n        </button>\r\n        <button\r\n            className={styles.more}\r\n            onClick={props.added}>\r\n            More\r\n        </button>\r\n    </div>\r\n);\r\n\r\n\r\nexport default buildControl;\r\n\r\n","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nimport styles from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Bacon', type: 'bacon' }\r\n];\r\n\r\n\r\nconst buildControls = (props) => (\r\n\r\n    <div className={styles.buildControls}>\r\n        <p>Current price: <strong>{props.price.toFixed(2)} $</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n                price={props.price} />\r\n        ))}\r\n        <button className={styles.orderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>\r\n            ORDER NOW\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className=\"Modal\"\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0',\r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n   ","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[\"Button\", props.btnType].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\n\r\nexport default button;","import React, { Fragment } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(ingKey => {\r\n            return <li key={ingKey}>\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                            {ingKey}: {props.ingredients[ingKey]}\r\n                        </span>\r\n                    </li>\r\n        });\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"loader\"></div>\r\n)\r\n\r\nexport default spinner;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null,\r\n        }\r\n\r\n        componentWillMount() {\r\n            // Handle request errors with axios \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n\r\n            // Handle response errors with axios\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        //Hide Modal on click and set error to null\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Fragment>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {/* Display error message only if there is an error */}\r\n                        {this.state.error ? this.state.error.message : null}\r\n\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../axios-orders';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    // Check if there are any or just one ingredient to then continue and make an order\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients).\r\n            map((ingKey) => {\r\n                return ingredients[ingKey];\r\n            }).\r\n            reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { purchasing } = this.state;\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ingredients\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        // {salad: true, meat: false etc...}\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p style={{ textAlign: 'center', fontSize: '2.5rem' }}>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (this.props.ingredients) {\r\n            burger = (\r\n                <Fragment>\r\n                    <Burger ingredients={this.props.ingredients} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n                        ordered={this.purchaseHandler}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.totalPrice} />\r\n                </Fragment>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ingredients}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.totalPrice} />\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal show={purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.ingredients,\r\n        totalPrice: state.totalPrice,\r\n        error: state.error,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (ingredientName) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: ingredientName,\r\n    }\r\n};\r\n\r\nexport const removeIngredient = (ingredientName) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: ingredientName,\r\n    }\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients,\r\n    }\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(res => {\r\n                dispatch(setIngredients(res.data))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchIngredientsFailed())\r\n            })\r\n    }\r\n};\r\n\r\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport styles from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            <h1>We hope it tastes well!</h1>\r\n            <div className={styles.burgerSummary}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    const inputClasses = [styles.inputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(styles.invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.input}>\r\n            <label className={styles.label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nimport styles from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        //All inputs of the contact form for iteration\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Mail',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true,\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        loading: false,\r\n    }\r\n\r\n    // Input's validation func\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        // Check for empty input\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        // Check for min length of the inputed value\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ loading: true });\r\n\r\n        const formData = {};\r\n\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.totalPrice,\r\n            orderData: formData,\r\n        };\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(res => {\r\n                this.setState({ loading: false });\r\n                alert(\"Thanks! Your order was sent to our cafe!\");\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false })\r\n            });\r\n    };\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        // Search for targeted input in cloned orderForm\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm,\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        //Check if the all inputs in the form is passed though validation\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        // set inputed value to it's state as well as formIsValid property\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { orderForm, loading, formIsValid } = this.state;\r\n\r\n        const formElementsArray = [];\r\n        for (let key in orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: orderForm[key]\r\n            })\r\n        };\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        touched={formElement.config.touched}\r\n                        shouldValidate={formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if (loading) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={styles.container}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.ingredients,\r\n        totalPrice: state.totalPrice,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\n\r\nconst checkout = (props) => {\r\n\r\n    const checkoutCancelledHandler = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const checkoutContinuedHandler = () => {\r\n        props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSummary\r\n                ingredients={props.ingredients}\r\n                checkoutCancelled={checkoutCancelledHandler}\r\n                checkoutContinued={checkoutContinuedHandler} />\r\n\r\n            <Route\r\n                path={props.match.url + '/contact-data'}\r\n                component={ContactData} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.ingredients,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(checkout);","import React from 'react';\r\n\r\nimport styles from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName],\r\n            }\r\n        );\r\n    };\r\n\r\n    const ingredientsOutput = ingredients.map(ingredient => {\r\n        return (\r\n            <span key={ingredient.name} className={styles.ingredient}>\r\n                {ingredient.name} ({ingredient.amount})\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order/Order';\r\n\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    orders: fetchedOrders,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { orders, loading } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withErrorHandler(Orders, axios);","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\n\r\nconst App = () => (\r\n  <Router basename=\"/burger-app-react\">\r\n    <div>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\n\r\nexport default App;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: false,\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst logger = store => {\r\n    return next => {\r\n        return action => {\r\n            console.log('[Middleware] Dispatching', action);\r\n            const result = next(action);\r\n            console.log('[Middleware] next state', store.getState());\r\n            return result;\r\n        }\r\n    }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(burgerBuilderReducer, composeEnhancers(\r\n    applyMiddleware(logger, thunk))\r\n);\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}