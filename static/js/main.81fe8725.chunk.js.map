{"version":3,"sources":["assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","logo","props","className","src","burgerLogo","alt","navigationItem","href","link","active","children","navigationItems","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","Backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","modalClosed","style","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","customer","name","adsress","street","zipCode","country","email","deliveryMethod","post","then","res","catch","error","sum","disabledInfo","OrderSummary","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.81fe8725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\">\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n\r\n","import React from 'react';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <a \r\n            href={props.link}\r\n            className={props.active ? \"active\" : null}>{props.children}</a>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nimport './NavigationItems.css';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/\">Checkout</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = (props) => (\r\n    \r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className=\"Logo-Toolbar\">\r\n            <Logo />\r\n        </div>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n);\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [\"SideDrawer\", \"Open\"];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className=\"Logo-SideDrawer\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport './Layout.css';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( (prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showSideDrawer } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n\r\n                <SideDrawer \r\n                    open={showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n\r\n                <main className=\"content\">\r\n                    {this.props.children}\r\n                </main>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-app-react-40887.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className=\"bread-bottom\"></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"bread-top\">\r\n                        <div className=\"ceeds\"></div>\r\n                        <div className=\"ceeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className=\"meat\"></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className=\"cheese\"></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className=\"bacon\"></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className=\"salad\"></div>;\r\n                break;\r\n            default: \r\n                ingredient = null;\r\n        }\r\n\r\n        return  ingredient;\r\n    }\r\n};\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).\r\n        map((ingKey) => {\r\n            return [...Array(props.ingredients[ingKey])].map((_, i) => {\r\n                return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please, start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"burger\">\r\n            <BurgerIngredient type='bread-top'/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"buildControl\">\r\n        <div className=\"label\">{props.label}</div>\r\n        <button \r\n            className=\"less\"\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n                Less\r\n        </button>\r\n        <button \r\n            className=\"more\"\r\n            onClick={props.added}>\r\n                More\r\n        </button>\r\n    </div>\r\n);\r\n\r\n\r\nexport default buildControl;\r\n\r\n","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nimport './BuildControls.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Bacon', type: 'bacon' }\r\n];\r\n\r\n\r\nconst buildControls = ( props ) => (\r\n\r\n    <div className=\"buildControls\">\r\n        <p>Current price: <strong>{props.price.toFixed(2)} $</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} \r\n                price={props.price}/>\r\n        ))}\r\n        <button className=\"orderButton\"\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>\r\n            ORDER NOW\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className=\"Modal\"\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0',\r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n   ","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button \r\n        className={[\"Button\", props.btnType].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\n\r\nexport default button;","import React, { Fragment } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(ingKey => {\r\n            return <li key={ingKey}>\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                            {ingKey}: {props.ingredients[ingKey]}\r\n                        </span>\r\n                    </li>\r\n        });\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"loader\"></div>\r\n)\r\n\r\nexport default spinner;","import React, { Component, Fragment } from 'react';\r\nimport axios from '../../axios-orders';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).\r\n            map((ingKey) => {\r\n                return ingredients[ingKey];\r\n            }).\r\n            reduce((sum, el) => {\r\n                return sum  + el;\r\n            }, 0);\r\n        this.setState({ purchasable: sum > 0 });\r\n    }\r\n\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        \r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients,\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        \r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients,\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('You continue!');\r\n\r\n        this.setState({ loading: true });\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: 'Nikita Aleksandrovich',\r\n                adsress: {\r\n                    street: 'test street',\r\n                    zipCode: '12458',\r\n                    country: 'Belarus'\r\n                },\r\n                email: 'test@test.com'\r\n            },\r\n            deliveryMethod: 'fastest'\r\n        };\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(res => {\r\n                this.setState({ loading: false, purchasing: false })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ loading: false, purchasing: false })\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { ingredients, \r\n                totalPrice, \r\n                purchasable,\r\n                purchasing } = this.state;\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for(let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        // {salad: true, meat: false etc...}\r\n\r\n        let orderSummary =  <OrderSummary \r\n                                ingredients={ingredients}\r\n                                purchaseCancelled={this.purchaseCancelHandler}\r\n                                purchaseContinued={this.purchaseContinueHandler} \r\n                                price={totalPrice} />\r\n\r\n        if(this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n\r\n            <Fragment>\r\n                <Modal show={purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                <Burger ingredients={ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded = {this.addIngredientHandler} \r\n                    ingredientRemoved = {this.removeIngredientHandler} \r\n                    purchasable={purchasable}\r\n                    ordered={this.purchaseHandler}\r\n                    disabled={disabledInfo} \r\n                    price={totalPrice}/>\r\n            </Fragment>\r\n            \r\n        );\r\n    };\r\n};\r\n\r\nexport default BurgerBuilder;","import React, { Component } from \"react\";\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <BurgerBuilder />\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}