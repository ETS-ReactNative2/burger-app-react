{"version":3,"sources":["components/Order/Order/Order.module.css","components/Order/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ingredient","key","className","styles","container","Number","parseFloat","price","toFixed","Orders","this","token","userId","onFetchOrders","orders","Spinner","loading","Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,4B,mHCgCrDC,EA7BD,SAACC,GAEX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OACI,0BAAMC,IAAKD,EAAWJ,KAAMM,UAAWC,IAAOH,YACzCA,EAAWJ,KADhB,KACwBI,EAAWH,OADnC,QAMR,OACI,yBAAKK,UAAWC,IAAOC,WACnB,2CAAiBN,GACjB,qCAAU,uCAAaO,OAAOC,WAAWd,EAAMe,OAAOC,QAAQ,O,gCCpBpEC,E,kLAEmB,IAAD,EACUC,KAAKlB,MAAvBmB,EADQ,EACRA,MAAOC,EADC,EACDA,OACfF,KAAKlB,MAAMqB,cAAcF,EAAOC,K,+BAIhC,IAAIE,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIL,KAAKlB,MAAMwB,UACXF,EAASJ,KAAKlB,MAAMsB,OAAOf,KAAI,SAAAR,GAAK,OAChC,kBAAC0B,EAAD,CACIhB,IAAKV,EAAM2B,GACXzB,YAAaF,EAAME,YACnBc,MAAOhB,EAAMgB,YAKrB,6BACKO,O,GApBIK,aAyCNC,uBATS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAM9B,MAAMuB,OACpBE,QAASK,EAAM9B,MAAMyB,QACrBL,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,WAXA,SAAAW,GACvB,MAAO,CACHV,cAAe,SAACF,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,QAa/DQ,CAA6CK,YAAkBhB,EAAQiB","file":"static/js/5.38352d4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order_container__2x7fy\",\"ingredient\":\"Order_ingredient__1xd3e\"};","import React from 'react';\n\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName],\n            }\n        );\n    };\n\n    const ingredientsOutput = ingredients.map(ingredient => {\n        return (\n            <span key={ingredient.name} className={styles.ingredient}>\n                {ingredient.name} ({ingredient.amount})\n            </span>\n        )\n    });\n\n    return (\n        <div className={styles.container}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n    \n    componentDidMount() {\n        const { token, userId } = this.props;\n        this.props.onFetchOrders(token, userId);\n    };\n\n    render() {\n        let orders = <Spinner />;\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ));\n        };\n\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( Orders, axios ));"],"sourceRoot":""}